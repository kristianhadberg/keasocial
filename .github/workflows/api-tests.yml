name: API Tests

on:
    push:
      branches: ["Lasse"]
    pull_request:
      branches: ["Lasse"]
    workflow_dispatch:

jobs:
    api-tests:
        runs-on: ubuntu-latest

        services:
          db:
            image: mysql:8.0
            ports:
              - 3306:3306
            options: >-
              --health-cmd="mysqladmin ping --silent"
              --health-interval=10s
              --health-timeout=5s
              --health-retries=3
            env:
              MYSQL_ROOT_PASSWORD: root
              MYSQL_DATABASE: keasocial
              MYSQL_USER: testuser
              MYSQL_PASSWORD: testpassword

        steps:
            
    
          - name: Set up Node.js
            uses: actions/setup-node@v3
            with:
                node-version: '18'
          # Step 1: Install Newman
          - name: Install Newman
            run: npm install -g newman
        
        # Step 2: Check out the code
          - name: Check out code
            uses: actions/checkout@v4
  
        # Step 3: Set up .NET
          - name: Setup .NET
            uses: actions/setup-dotnet@v4
            with:
              dotnet-version: 8.0.x
  
        # Step 4: Restore dependencies
          - name: Restore dependencies
            run: dotnet restore
  
        # Step 5: Install dotnet-ef Tool
          - name: Install dotnet-ef
            run: dotnet tool install --global dotnet-ef
  
        # Step 6: Add .NET Tools to PATH
          - name: Add .NET Tools to PATH
            shell: bash
            run: echo "PATH=\$PATH:~/.dotnet/tools" >> $GITHUB_ENV
  
        # Step 7: Wait for the Database
          - name: Wait for Database
            run: |
                for i in {1..30}; do
                  echo > /dev/tcp/localhost/3306 && break
                  echo "Waiting for database..."
                  sleep 5
                done
  
        # Step 8: Run database migrations
          - name: Run Migrations
            run: dotnet ef database update 20241113122952_InitialCreate --project keasocial/keasocial.csproj
            env:
              DATABASE_HOST: localhost
              DATABASE_PORT: 3306
              DATABASE_USER: testuser
              DATABASE_PASSWORD: testpassword
              DATABASE_NAME: keasocial
  
        # Step 9: Run the API server in the background
          - name: Run API Server
            run: |
                dotnet run --project keasocial/keasocial.csproj --urls http://localhost:5260 &
            env:
              ASPNETCORE_URLS: http://localhost:5260
              DATABASE_HOST: localhost
              DATABASE_PORT: 3306
              DATABASE_USER: testuser
              DATABASE_PASSWORD: testpassword
              DATABASE_NAME: keasocial
    
          # Step 10: Run Postman Collection with Newman
          - name: Run API Tests
            run: |
                  newman run keasocial.Tests/postman/Keasocial.postman_collection.json \
                  --environment keasocial.Tests/postman/keasocial.postman_environment.json \
                  --reporters cli,junit \
                  --reporter-junit-export TestResults/newman-api-tests.xml
  
  
        # Step 11: Upload API Test Results
          - name: Upload API Test Results
            if: always()
            uses: actions/upload-artifact@v3
            with:
              name: api-test-results
              path: TestResults/newman-api-tests.xml
